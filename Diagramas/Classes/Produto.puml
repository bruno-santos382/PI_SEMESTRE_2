@startuml Produto

abstract class BaseController {
    -Validacao validacao
    +__construct() : void
    +realizarAcao(callable acao, array filtros = null) : mixed:  "Executa uma ação específica após validar os dados do POST."
}

class Conexao {
    +__construct(): void:  "Inicia a conexão com o banco de dados utilizando configurações específicas."
}

package "Produto" {
    class Produto {
        -Conexao conexao
        +__construct() : void:  "Inicializa a instância da classe."
        +cadastrar(string nome, float preco, string marca, int categoria, int estoque, int id_imagem=null) : void:  "Cadastra um novo produto."
        +atualizar(int id, string nome, float preco, string marca, int categoria, int estoque, int id_imagem=null) : void:  "Atualiza um produto existente."
        +excluir(int id) : void:  "Exclui um produto."
        +buscar(string termo) : array:  "Busca produtos com base no termo."
        +listarTudo() : array:  "Lista todos os produtos ativos."
    }

    class ProdutoController {
        -Produto produto
        +__construct() : void:  "Inicializa a instância da classe."
        +cadastrarProduto() : array:  "Cadastra um produto."
        +atualizarProduto(int id) : array:  "Atualiza um produto pelo ID."
        +excluirProduto(int id) : array:  "Exclui um produto pelo ID."
        +buscarProduto(string termo) : array:  "Busca produtos com base no termo."
        +listarProdutos() : array:  "Lista todos os produtos ativos."
    }

    BaseController <|-- ProdutoController
    ProdutoController --> Produto: usa 
    Produto --> Conexao: usa 
}

@enduml